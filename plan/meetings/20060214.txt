 **** BEGIN LOGGING AT Wed Feb 22 16:01:15 2006

Feb 14 15:45:24 <mclasen>	hmmm, no federico
Feb 14 15:47:46 <rambokid>	isn't it too early still?
Feb 14 15:47:56 <dom>	13 minutes to go by my clock
Feb 14 15:55:02 <mclasen>	yes, I was just looking around for federico on irc...
Feb 14 16:03:15 <mclasen>	ok, looks like federico is not around
Feb 14 16:04:58 <mclasen>	so it looks like we should postpone async filechooser discussions until federico shows up
Feb 14 16:05:30 <kris>	guess so yes
Feb 14 16:05:40 <mclasen>	mitch: did you see dom's response re  rich text ?
Feb 14 16:06:15 <mitch>	mclasen: yea i did
Feb 14 16:08:11 <mitch>	after reading it, i beleive there is the need for both approaches, internal format of copying just anything (which needs something like tagsets to be somehow configurable), and other methods which probably should not have that tagset stuff
Feb 14 16:08:47 <mitch>	perhaps leaving out tagsets from application registered (de)seriaization methods would already be sufficient
Feb 14 16:09:25 <dom>	i'm ok with there being an internal format that matches the GtkTextBuffer's model. it's perhaps the best way to guarantee lossless copy+paste
Feb 14 16:09:52 <mitch>	yea, for whatever voodoo stuff people want to do
Feb 14 16:10:22 <mclasen>	the internal format must somehow be parametrized by the used set of tags
Feb 14 16:10:35 <mitch>	yea
Feb 14 16:11:29 <mitch>	i think application installed functions do not need this, since they will know what to do
Feb 14 16:12:27 <dom>	why treat this one differently?
Feb 14 16:13:22 <mclasen>	because app b may not know what to do with tags from app a ?
Feb 14 16:13:28 <mitch>	they do not need tagsets i mean, if your app has an xhtml deserializer, it will know what tags the textbuffer can handle and just do what's right
Feb 14 16:13:36 <mitch>	oh
Feb 14 16:13:42 <mitch>	ok, i did misread
Feb 14 16:14:47 <dom>	mitch: won't letting app b subclass the tagset deserializer solve that issue?
Feb 14 16:14:58 <mitch>	dom: that's actually the special case of copying within one app or multiple apps of the same "framework" or whatever
Feb 14 16:15:31 <mitch>	dom: their text buffers may have whistles and bells which do not appear in any serialized form, but which one wants to copy between them
Feb 14 16:15:31 <mclasen>	one could just do a get_data(), try to deserialize it, and have the drop/paste fail if one meets unknown tags...
Feb 14 16:16:38 <mitch>	dom: subclassing involves abstracting that stuff generally, right now we just register function pointers
Feb 14 16:17:29 <dom>	i don't mean to present "subclassing" as the only way to solve the problem
Feb 14 16:17:45 <mitch>	yea
Feb 14 16:18:00 <dom>	i guess i don't understand why we're pushing the deserialization logic down to the TextView, instead of up 1 level to the app
Feb 14 16:18:30 <mitch>	um, it's the app that registers the stuff
Feb 14 16:18:34 <mclasen>	we are not. the app registers the deserialization functions
Feb 14 16:18:40 <dom>	i might suggest documenting the tagset markup, and the apps write parsers for it. they can ignore whatever they don't grok
Feb 14 16:18:43 <mitch>	the text buffer just uses the rich text registry
Feb 14 16:20:42 <mitch>	the deserialization functions are completely separate and registered in gtkrichtext.c as any app-supplied one
Feb 14 16:20:57 <mitch>	the app can even unregister it
Feb 14 16:22:45 <cehteh>	anyone of you interested in helping me with gtk bindings for prolog? :)
Feb 14 16:23:18 <mitch>	cehteh: wrong channel, this is a meeting. go to #gtk+
Feb 14 16:23:58 <cehteh>	ah well :)
Feb 14 16:23:59 <mitch>	um, unless i misunderstood you, did i :)
Feb 14 16:24:10 <jrb>	if he's writing bindings, it's not totally off topic
Feb 14 16:24:25 <mitch>	yea that's what i just thought too
Feb 14 16:24:44 *	cehteh uses Peter van Eertens gtk-server for now
Feb 14 16:25:24 <cehteh>	used to expose the plain gtk api ... and now working on some higher level gui definition
Feb 14 16:25:31 <jrb>	mind you; ew, prolog. (-;
Feb 14 16:25:35 <cehteh>	http://www.pipapo.org/prologwiki/PasteBin/GUI
Feb 14 16:26:44 <mclasen>	mitch: can we get rid of the separate tagset in the api, and just require apps to use a suitable mime-type when registering the internal-format serialization function ?
Feb 14 16:26:52 <dom>	mitch: ok, i re-read your tagset description. let's say for instance that i'm app A, and support features XYZ under "tagset-a". let's say that there exists an app B, that supports the same features XYZ under "tagset-b". how does one negotiate richtext pasting between the two?
Feb 14 16:27:23 <mitch>	mclasen: would probably simplify stuff quite a bit
Feb 14 16:27:35 <mclasen>	dom: this problem is the same as nonstandard mimetypes, really. what if one uses application/xml, and the other text/xml ?
Feb 14 16:27:39 <mitch>	mclasen: actually, that's ust what happens internally :)
Feb 14 16:28:56 <dom>	mclasen: why add more to the mess, though? :)
Feb 14 16:29:25 <mclasen>	dom: I just proposed to reduce the mess to the usual mimetype mess...
Feb 14 16:29:36 <mitch>	yea :)
Feb 14 16:30:36 <mitch>	the real problem is to get internal copying of arbitrary crap into the same api as standard rich text formats
Feb 14 16:33:36 <mclasen>	mitch: do you think your  patch can be reworked to avoid tagsets in the api ?
Feb 14 16:33:40 <dom>	but i don't think that there's a need for even that. gtk+ should advertise the data as "application/x-gtk-textbuffer-internal" or whatever. the app should provide its own desrialization functions that ignore the tags it doesn't support
Feb 14 16:34:12 <dom>	i'm a broken record now. i'll just be quiet.
Feb 14 16:35:04 <mclasen>	thanks for the feedback anyway, the next iteration will be better because of it
Feb 14 16:35:17 <mclasen>	so, switching topics to glib
Feb 14 16:35:20 <mitch>	dom: but that's exactly what happens now, apart from that taget stuff that only makes sense for  "application/x-gtk-textbuffer-internal"
Feb 14 16:35:39 <mitch>	mclasen: it will even simplify stuf
Feb 14 16:35:40 <mitch>	f
Feb 14 16:35:48 <mclasen>	cool
Feb 14 16:36:17 <mclasen>	does anybody have the gnome 2.14 schedule at hand ? how long till 2.14 final ?
Feb 14 16:36:26 ---	mitch is now known as mitchAway
Feb 14 16:36:28 <mitchAway>	need to run...
Feb 14 16:36:38 <mclasen>	bye mitch
Feb 14 16:36:45 <leio>	6 March - Hard Code Freeze
Feb 14 16:36:48 <dom>	bye
Feb 14 16:36:50 <mclasen>	thanks
Feb 14 16:37:05 <mclasen>	so, we should probably target end of february for glib 2.10
Feb 14 16:37:05 <mitchAway>	bye :)
Feb 14 16:37:23 <leio>	27th Feb is 2.14 RC tarballs due
Feb 14 16:37:33 <mclasen>	 ah, thanks. thats the target date then
Feb 14 16:37:54 *	leio hugs the clock applet with evolution ics calendar
Feb 14 16:38:07 <rambokid>	mclasen: if you have anything pending for/blocking on me, please just ping me again on it.
Feb 14 16:38:43 <mclasen>	rambokid: i'll look over the bug list, but I don't think there is anything blocker like
Feb 14 16:39:05 <mclasen>	rambokid: did  you see davyd's gslice "graph" ?
Feb 14 16:39:14 <rambokid>	no, where's that?
Feb 14 16:39:25 <mclasen>	he posted on performance-list@gnome.org
Feb 14 16:39:41 <dom>	http://davyd.livejournal.com/166736.html
Feb 14 16:39:47 <mclasen>	http://davyd.ucc.asn.au/images/gmemchunk.png
Feb 14 16:40:31 <mclasen>	while being shiny etc, I wonder if it is a good idea to put a graph like that in the release notes without further explanation
Feb 14 16:40:46 <mclasen>	it might set unrealistic expectations...
Feb 14 16:41:23 <carol>	vapml?
Feb 14 16:42:07 <leio>	especially if people don't realise fully, that this is about malloc/free, and that being x times quicker means maybe only lower than 1-5% quicker in most cases
Feb 14 16:42:08 <rambokid>	mclasen: agree
Feb 14 16:42:49 <leio>	but if that's clear, then it would be useful under developers section, so people would get rid of their mem chunks and free lists :)
Feb 14 16:42:52 <rambokid>	mclasen: there's plenty of docuemntation i prodiced for GSlice that you can link to though. (blog entries, reference documentaiton, emails on the mailing list and incode docu)
Feb 14 16:43:09 <mclasen>	rambokid: yes
Feb 14 16:43:20 <rambokid>	mclasen: do you have the performance-list subject?
Feb 14 16:43:36 <mclasen>	request for numbers and graphs for Release Notes
Feb 14 16:44:48 <mclasen>	ok, gotta go. we really need to get federico here for the async filechooser discussion sometime soon...
Feb 14 16:45:01 <mclasen>	see you next week

**** ENDING LOGGING AT Tue Feb 14 16:45:06 2006
