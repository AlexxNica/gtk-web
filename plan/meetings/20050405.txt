Meeting on irc.gnome.org:#gtk-devel
Meeting started April 6 2005 16:04 EST (22:04 UTC)


In attendence: 

Matthias Clasen (matthias),
Jonathan Blandford (jrb),
Owen Taylor (owen),
Ray Strode (halfline),
Johan Dahlin (jdahlin),
Carlos Garnacho (garnacho),
John Ehresman (jpe),
Soeren Sandmann (ssp),
Federico Mena Quintero (federico),
Jon Kare Hellan (jon_kare),
Manish Singh (yosh)


<matthias>	so, I have been starting to work towards stable releases
<matthias>	and I may do them around the end of the week, if I can finish my loop over all unmilestoned bugs
<matthias>	if there are any bad bugs which we should fix before the next release, please bring them up
<matthias>	otherwise I'll work based on whats currently on the 2.6.4/2.6.5 milestones
<jdahlin>	when can we expect the introspection code to land?
<matthias>	do we know a date for gnome 2.10.1, btw ?
<owen>	Not that I know of. I don't even know who's coordinating 2.10.x
<garnacho>	I think that kmaraas
<owen>	He did 2.8.x anyways
<matthias>	ok, so doing a release this week or next week should not make us miss 2.10.1 in any case
<lgs>	hi
<matthias>	jdahlin: I still plan to put my prototype code up later this week, but life has been hectic in the last few days...
<jdahlin>	matthias: I'm asking because I'd like to look at the possibility of using features from it for the libglade integration
<jdahlin>	for example, currently libglade loads all GTypes it supports during startup. Doing it lazily might be a better option (if memory really matters)
<matthias>	jdahlin: I'll try to get it done this week
<matthias>	where does libglade currently obtain the list of get_type functions to call ? hardcoded ?
<jdahlin>	yes, hardcoded
<matthias>	jdahlin: btw, I discussed GtkWidget::sizegroup with owen today, and we concluded that it doesn't make much sense as a property
<matthias>	since a) a widget can be in multiple size groups, and b) you will need explicit support in gui builders for it anyway
<jdahlin>	matthias: I came to a similar conclusion, I think it would be better to specify children of the GtkSizeGroup
<jdahlin>	for reference, the list of GTypes are specified in the end of this file: http://cvs.gnome.org/viewcvs/libglade/glade/glade-gtk.c?rev=1.106.2.3&view=markup
<matthias>	jdahlin: thats really misusing the "children" terminology, though
<matthias>	jdahlin: "members" would be much better (a similar comment goes for treating columns in a treeview as children, btw)
<child> for this situations?
<jdahlin>	matthias: I'm reusing child in a couple of other places, UIManager->ActionGroup, ActionGroup->Action, GtkTreeView->GtkTreeViewColumn and GtkTreeViewColumn->GtkCellRenderer
<matthias>	jdahlin: yes, although I may be overly pendantic about terminology here
<child> probably keeps the parser a tiny bit simpler
<jdahlin>	matthias: but your point is good, GObject is really missing the concept of having subobjects
<owen>	Well, the members of a size group definitely aren't subobjects, since a widget can be members of multiple size groups
<matthias>	jdahlin: pushing containers to gobject is a very old topic, afaik
<jpe>	jdahlin, wouldn't it better to think about relationships between objects, rather than just container & subobjects (children)
<jdahlin>	jpe: that seems a bit complicated, but perhaps required for sizegroups
<matthias>	jpe: general children properties, as in DSSL groves
<jpe>	jdahlin, another example would be a model that's used by multiple views
<jdahlin>	jpe: you could just set a property on all views for the model, which already works today
<jdahlin>	if we had a sizegroup property we could just call it multiple times for a widget, to add the widgets in several different sizegroups
<matthias>	jdahlin: but that (model property on views) misses the reverse relationship
<matthias>	jdahlin: that gives wierd semantics
<matthias>	the sizegroup property would have to be a list of sizegroups
<jpe>	should the sizegroup property be a list of widgets?
<jpe>	sizegroups I meant, not widgets
<ToiletBrush>	Anyone familiar with installing Luminocity
<matthias>	try on #fedora-desktop, we're in a meeting
<ToiletBrush>	im sorry
<jdahlin>	jpe: they could be, but it would require special support (outside normal properties)
<matthias>	I think list-valued properties and container support in gobject are beyond the scope of 2.10/libglade integration
<jpe>	but aren't we talking about needing special support for them already
<matthias>	jpe: for size groups, I think special support is necessary not just because gobject doesn't handle list-based properties, but because treating them as generic list-valued properties will suck for a gui builder
<jpe>	matthias, yes you'll need a decent gui for them in the builder, but it would be nice if serializing / unserializing them didn't require special support
<jpe>	matthias, you're probably right about list-valued properties being out of scope, though
<matthias>	my family calls for lunch...anything else we ought to discuss today ?
<owen>	Nothing that I can think of. If someone wants to tackle rectangular path optimizations in Cairo that would help HEAD performance a lot :-)
<jpe>	owen, is cairo + gtk head usable on win32 yet?
<ssp>	owen: Is it generating non-rectangular trapezoids for rectangular paths?
<owen>	jpe: I haven't touched it since I got it running.... so the slight oddities I think are still there.
<owen>	ssp: No, but it's generating rectangular trapezoids for rectangular paths. That could be optimized in the server, but optimizing it on the lcient side will give much better old-X-server performance
<ssp>	right
<jeramy>	Sorry to bother you guys, but is the bug #145121 (GtkFileChooser should accept file DND) easily fixed?  There's a patch attached to it, but I don't know if that was rejected or someone just didn't get around to incorporating it?
<federico>	jeramy: I'll take a look before 2.6.next
<jeramy>	thanks
<jdahlin>	do we have any good naming suggestions for the new GladeXML object?
<jdahlin>	GtkObjectFile, GtkBuilder have been suggested before
<owen>	GtkObjectFile == no
<owen>	:-)
<owen>	GtkBuilder isn't awful, though it isn't terribly descriptive
<lgs>	GtkObjectBuilder?
<jpe>	GtkObjectFactory
<owen>	Is the object really a factory / builder? It corresponds to one resource file right?
<jrb>	GtkGlade
<jpe>	Is the intent to keep it around after the objects are instantiated?
<lgs>	jrb, maybe GtkGladeReader
<jdahlin>	owen: could be several, since ui manager files can be referenced to external files. pixmaps could also be considered to be part of the interface
<owen>	I guess I'd have to see the proposed API to see if GtkBuilder made sense as a name
<jdahlin>	ob = gtk_object_builder_new("main.glade", NULL, NULL, NULL)
<jdahlin>	gtk_object_builder_get_object(GTK_OBJECT_BUILDER(ob), "window1")
<jdahlin>	owen: it's just the api of GladeXML, plus a few functions to merge/unmerge ui files
<owen>	Well, it would have to be "build_object()" for the name to make any sense. If the objects are created on _new(), then  ...Builder or ...Factory doesn't fit
<halfline>	how about GtkUIDescription?
<halfline>	maybe a bit long
<owen>	halfline: I think we've polluted that namespace with GtkUIManager
<jpe>	GtkGladeReader is better if the files will continue to have .glade extensions
<halfline>	owen: ah true
<jdahlin>	GtkGlade is actually not terribly bad
<jdahlin>	not very informative though :)
<jpe>	GtkGlade is tied to the .glade extension


Meeting ended April 6, 17:12 EST (23:12 UTC)
