Meeting on irc.gnome.org:#gtk-devel
Meeting started January 31 2005 16:04 EST (21:04 UTC)

In attendence: 

Owen Taylor (owen), 
Manish Singh (yosh),
Federico Mena Quintero (federico),
Matthias Clasen (mclasen), 
Billy Biggs (vektor),
Robert Ã–gren (roboros),
Tor Lillqvist (tml),
Maciej Katafiasz (mathrick)


<mclasen>	lets begin with concrete things...
<mclasen>	I want to do 2.6.2 releases towards the end of this week, probably on Friday
<owen>	mclasen: I'll do a pango-1.8.1 this week as well
<mclasen>	Are there important bugs which need to be fixed before that ? 
<owen>	mclasen: Might be worth mailing federico if he doesn't show up
<owen>	(I don't know if there are filechooser bugs, but if there are important bugs, they are there)
<roboros>	bug 154007 perhaps?
<mclasen>	yes, I'll do that, last time I checked federico was trying to track down the file duplication issue
<mclasen>	roboros: oh, I hadn't noticed that you had a patch for that one. Nice, I'll check it out
<owen>	roboros: Not with that comment please in any case
<roboros>	owen: you mean the comment about CLAMP in the actual patch?
<owen>	roboros: Yes.
<roboros>	no problem, that was mostly a reminder for myself
<owen>	roboros: But looks like there is a deeper bug
<owen>	That change may be OK, but for the paned to get allocated less size than it's requisition is busted
<mclasen>	I don't think we can fix the treeview scrolling issues without jrb, so I'll remove 163214 from the 2.6.2 milestone
<vektor>	The wholle treeview scrolling thing is really strange.
<mclasen>	vektor: I think there are at least 2 independent scrolling issues
<vektor>	Agreed.
<mclasen>	one is that scrolling is affected by concurrent model changes
<mclasen>	the other one is the fixed height optimizations seem to not quite work 
<vektor>	Yeah, I've been investigating the first one and not the second.  It's confusing.
<roboros>	owen: yeah you're right, someone needs to do more debugging
<mclasen>	the next topic I would like to discuss is gail
<mclasen>	at the lsb a11y workshop in hawaii last week, jrb and billh discussed it and the idea came up to merge gail in gtk+
<mclasen>	the motivation for having gail as a separate library was IIRC mainly fears of it not being ready in time for gtk 2.0
<federico>	speaking of gail
<mclasen>	yes
<federico>	I'm looking into LDTP (it's the a11y-based GUI testing framework from the Bangalore folks) and while I can have the test data independent of gtk, it would be good to distribute both together
<federico>	... but that assumes that gtk and its a11y stuff is self-contained
<mclasen>	does gail build on win32 ? does it do something useful there ?
<tml>	mclasen: hmm, i have compiled it once, but i doubt it does anything sensible. not that i have ever really tried what it does on x11...
<mclasen>	ok, I guess we should invite the a11y team to a joint meeting to discuss the idea more thoroughly
<mclasen>	federico: I was asking earlier about 2.6.2 bugs... I want to do 2.6.2 towards the end of this week
<mclasen>	are there important filechooser bugs we need to fix before that ?
<tml>	I remember I have promised to try to improve stuff in the file chooser wrt case insensitivity, but  I don't know whether i will have time before 2.6.2. anyway, as the natives are getting restless, I guess iIdefinitely should distribute win32 binaries for 2.6.2
<mclasen>	tml: can we try to finally get win32 binaries hosted on ftp.gtk.org ? 
<tml>	we could do that, yes
<tml>	can you send instructions? presumably just upload files there with scp?
<mclasen>	yes, do you have an account there ?
<tml>	nope
<mclasen>	I think yosh hands them out
<tml>	ok will ask him
<mclasen>	ok, another topic I had in my mind is renaming of bookmarks in the file chooser
<mclasen>	and the question how we handle that, since the .gtk-bookmarks file format is not extensible
<mclasen>	anyway, have to leave now. Bye
<roboros>	bye
<owen>	tml: I'm about ready to commit my win32 backend to Cairo, btw. The native font stuff isn't done yet, but I'll commit something initially that uses the fontconfig bcakend
<tml>	owen: good, will try to have a look
<owen>	tml: BTW, you say that gdb works OK with cygwin binaries for you?
<owen>	s/cygwin/mingw/
<tml>	yes, no show-stopping problems
<tml>	also insight works
<owen>	tml: And no special tricks?
<tml>	well, you can't set breakpoints in dlls before they have been loaded, so usually i do "b main" and "run", then set breakpoints in the dlls i am interested in
Jan 31 16:56:06 ---	mathrick is now known as mathrick|sick
<tml>	and after control-c you aren in some weird location, "bt" doesn't give any sensible information, so you can't do that to figure out what's taking so long, for instance. but "cont" still works.
 *	tml feels a fever coming
 *	mathrick|sick joins tml
<owen>	tml: Hmm, I can't even break on main, and I've genreally had complete junk backtraces when I segfault
 *	tml fetches some meds
 *	mathrick|sick goes to bed
<roboros>	the mingw gdb I was using previously didn't work well with the --image-base=0x10000000 link param that libtool puts there, I had to hack ltmain.sh to get rid of that and enable auto image base instead
<tml>	is that the mingw gdb or cygwin?
<tml>	roboros: i wonder wht auto-image-base isn't the default? have you ever had any problems with it?
<roboros>	none that I'm aware of
<owen>	tml: mingw gdb
<tml>	owen: try the cygwin gdb (or was it so that you don't have cygwin at all installed?)
<owen>	tml: I don't have cygwin installed at the moment, but if it gives me a debugger that works, I may have to do that
<tml>	i haven't tried the mingw gdb (and can't do it right now, logged in as admin and running a full virus scan. (six hours and counting, sigh))
<tml>	at least for me cygwin's gdb works, but might well be that also mingw's would, and that your problem is because of something peculiar in your machine..
<owen>	tml: I'm doing some experiements now .... it looks like some particular library pulled in by cairo is breaking things ... gdb works on a "hello world"
<owen>	tml: Errr, what the heck, cairo.pc includes -Wl,-s 
<owen>	(-s being strip!)
<tml>	heh
<roboros>	nasty :)
<owen>	tml: OK, my skepticsm about gnuwin32 is much increased
<tml>	was that caused by something from them?
<owen>	tml: freetype-config output was *full* of junk.
<owen>	-Wl,-s -lgw32c -liberty -lintl -liconv -lwsock32....
<tml>	hmm, dunno where my freetype-config is from
<mathrick|sick>	liberty? there's library named "iberty"?
<tml>	yes, from FSF, included in various GNU packages IIRC, perhaps not intended to be installed separately though?
<owen>	mathrick|ick: Yep :-). It's been around in the GNU package forever
<mathrick|sick>	owen: heh
<mathrick|sick>	it does what? assures you can't link to non-GPL packages or something? :)
<mathrick|sick>	s/packages/code/
<owen>	mathrick|sick: It has random semi-useful crap, like bits of libbfd that arne't in libbfd for some reason
<mathrick|sick>	ah
<owen>	I have *no* idea why a build of freetype, which  builds natively just about everywhere would need it.
<owen>	or libiconv, or any of the other stuff. Plus, even if they do need it, the dll's will pull in themselves.
 *	tml ponders other potential "fun" library names. oser, eprechaun, ard, ove, esbian, eet. hmm, there must be a list of them somewhere
<mathrick|sick>	iconv is useful, no?
<owen>	mathrick|sick: iconv is useful in some case. Freetype should have no need of charset conversion, however.
<mathrick|sick>	fonts can come in multiple encodings, AFAIK
<owen>	mathrick|sick: freetype doesn't do the conversion.
<mathrick|sick>	owen: but it needs to extract the glyph from character table, no?
<tml>	owen: does the libglib-2.0.pc that gets generated for you on mingw include -lintl, -liconv,  and -lwsock32btw?
<owen>	No -lwsock32 for me
<owen>	mathrick|sick: You hvae to give it character indices as the font is encoded. It can't covert euc-jp to unicode or anything like that
<tml>	but -lintl and -liconv? aren't these, too, wrong? shouldn't software that uses libintl link to it explicitly?
<owen>	tml: -lintl is probably right. -liconv shouldn't be needed since we have g_iconv() as a wrapper
<mathrick|sick>	owen: ah, so you're responsible for parsing chartable into something useful yourself?
<owen>	mathrick|sick: More or less. Most real fonts have unicode chartables these days
<mathrick|sick>	mhm
<mathrick|sick>	owen: which reminds me, how are fontsets in pago created? Like, when I choose sans, I have no idea nor way to see what kanji font will be chosen, right? And also it seems to prefer some CJK fonts choosing them almost all the time
<owen>	All fontconfig
<mathrick|sick>	which means... ? :)
<mathrick|sick>	can fontchooser give that info?
<mathrick|sick>	or influence the choice in any way?
<owen>	mathrick|sick: What is the fontchooser?
<mathrick|sick>	owen: widget for choosing fonts in gtk+
<mathrick|sick>	oops, another seizure coming
 *	mathrick|sick -> bed
<owen>	mathrick|sick: The fontchooser can't specify it but a program can say "arial,times roman,sans" - a list like that
<owen>	mathrick|sick: Talk to you some other time
 *	tml leaves for bed, too


Meeting ended January 31, 17:31 EST (22:31 UTC)
