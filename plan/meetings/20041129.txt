Meeting on irc.gnome.org:#gtk-devel
Meeting started November 29 2004 16:03 EST (21:03 UTC)

In attendence: 

Manish Singh (yosh), 
Owen Taylor (owen), 
Matthias Clasen (mclasen), 
Robert Ã–gren (roboros),
John Ehresman (jpe),
Sven Neumann (neo),
Federico Mena Quintero (federico),
Bill Haneman (billh),
Maciej Katafiasz (mathrick),
Ray Strode (halfline),
Soeren Sandmann (ssp),
Anders Carlsson (andersca)


<mclasen>	I guess we should start...
<mclasen>	Do we have any other agenda items, apart from old and new bugs ?
<neo>	I'd like to know when we can expect a gtk+-2.4.14 release
<mclasen>	Continuing last weeks discussion about milestoning, I have created owens proposed pool milestones for glib and gtk+, and have added some explanation to www.gtk.org/bugs.html
<mclasen>	So when moving bugs around the next time, we should probably move bugs from the "release target" milestones to "---", and then sort them back to the "pool milestones"
<mclasen>	I have also started to collect a list of mustfix bugs for 2.6, by moving them to the 2.6 milestone with high priority
<mclasen>	it would be great if everybody could add to that list for bugs in his area
<federico>	mclasen: where are you keeping the list?
<owen>	federico: In bugzilla, it sounds like...
<mclasen>	federico: the high priority bugs on the 2.6 milestone
<federico>	duh
Nov 29 16:11:51 *	federico reads again
<federico>	thanks :)
<mclasen>	there are currently 9 bugs on that list
<mclasen>	some of them are not really "mustfix"
<mclasen>	neo: is the ui manager performance still an issue for the gimp with glib, gtk+ head ?
<federico>	I'll add from the file chooser bugs to there
<billh>	what are the chances of getting some of those old a11y bugs cleared? 
<neo>	mclasen: it works reasonably well with the gtk-2-4 branch
<federico>	as the perennial controversial bug, I'd like to resurrect the "esc doesn't close dialog boxes" one
<owen>	billh: We haven't really started talking about specific bugs yet.
<owen>	federico: Anythign there absolutley has to go through the UI team. 
<billh>	owen: that wasn't a very specific question ;-)
<federico>	owen: basically, my opinion is that the UI team is being overly facetious on that issue
<federico>	*everyone* within novell complains about that bug, for instance
<owen>	billh: Well, I think the answer is "easy to fix bugs or bugs with a patch are good candidate to fix
<neo>	federico: does this bug have a number?
<federico>	neo: hold on
<mathrick>	federico: nod
<owen>	federico: Then that's good information to bring to the UI team (though I'm guessing that complaint refers almost exclusively to find dialogs...)
<mathrick>	esc should totally close dialogs
<mathrick>	owen: not really
<federico>	neo: #101293
<mathrick>	owen: all low info, stateless dialogs qualify here
<owen>	federico: If the UI team is not making good UI decisions, the right fix isn't to ignore them
<mathrick>	I'd say message dialogs should get esc bound to dismiss by default
<neo>	federico: perhaps you want to adapt the GIMP's changes
<neo>	federico: GIMP dialogs close on escape
<owen>	mathrick: IMO, off topic for this meeting
<mathrick>	owen: k
<neo>	we haven't had any complaints about that behaviour
<billh>	owen: bugs that are >3 years old need fixes even if they are not easy, IMO
<owen>	billh: Great...
<owen>	billh: I assume that means that you'll be providing patches?
<billh>	owen: sure, with guidance on approach.
<billh>	owen: mostly we already have patches.
<halfline>	w
<federico>	owen: ok, I'll see how to resurrect that discussion
<federico>	neo: (our package has a patch to enable esc for all dialogs)
<mclasen>	billh: could you attach the patches to the bugs in question ? the three bugs you mentioned in your mail don't seem to have any applicable patches, but tons of discussion
<billh>	my mail mentioned 5 bugs
<owen>	billh: Glancing at the bugs you listed (without actually rereading them)- 70986 wasn't clear for a long time if there was consensus, not sure if that was reached. 111031 relatively easy to fix though takes an afternoon of poking around in some unpleasant bits of pango. 62948 - absolutely no idea what the right fix is. I put some guesses in the bug report when I filed it, but still isn't clear.  89336 - mondo hard
<billh>	mclasen: my mail mentioned 5 bugs.
Nov 29 16:25:05 *	mclasen counts again...
<billh>	owen: I don't see any evidence of controversy in 70986.  I think it's just lacking the implementation.
<neo>	federico: I think this is exactly what GimpDialog is doing
<billh>	owen: 62948 was one you logged, you seemed to have several ideas at the time.
<mathrick>	federico: it might be good to put some intelligence in here, like Esc closing settings dialog when nothing was changed, and undoing in other cases? That'd mean for all dialogs Esc wouldn't be good, but for example message dialogs should be safe to bind esc in them
<mathrick>	owen: sorry ;)
<mclasen>	billh: lack of implementation is also a considerable obstacle for fixing the bug...
<neo>	hmm, of course with the HIG suggested style of dialogs that have instant-apply but no way to revert the changes, that makes things difficult
<mclasen>	billh: 111031 seems like reasonable easy fix
<billh>	mclasen: not for the bug I refer to.  Impl for that bug is trivial if we get the OK to add the feature.
<owen>	bug 155751 is all valid suggestions, (I think largely on other bugs as well), but doesn't seem particularly a11y related. 
<billh>	owen: all typeahead-related stuff has a big a11y impact.  But as I said, that's for you and Calum and the rest of the gtk+ & usability teams
<owen>	billh: It's also unclear to me why 62948 is a11y related. It's an internationalization issue mostly. The only concrete solution I had in there was "add a commit key sequence to GtkIMContextSimple"
<owen>	billh: One reason that's that been sitting around for a while is that it has a clear relationship to "validation" for dialogs
<billh>	owen, mclasen: so what I am hearing is: 111031 should be fixable soon (we needed your agreement on the API).  Perhaps 62948 should be tabled for now.
<owen>	Since you want to force a commit pretty much exactly when you want to validate an input sequence
<billh>	owen: actually it could have big a11y impact - think of screenreaders, etc. i.e. what do they get from a text component that's partway through an input sequence?
<owen>	billh: Well, input-method + accessiibiltiy running at the same time is pretty much uncharted territory
<billh>	why do you say that?
<owen>	billh: But certainly changing preedit text to be part of the text buffer retrieved programmatically is not really something I'd consider
<billh>	obviously you need both for a11y i18n
<owen>	billh: have you guys been testing it? Do you expect it works?
<billh>	you gotta get that info somehow
<billh>	we've been mucking with it some.  Things like this bug can get in the way.
<billh>	if it doesn't work, it'll just have to be fixed.
<owen>	If you need access to preedit text, you need to define ATK interfaces for preedit text . 
<billh>	no way
<billh>	we have ATK interfaces, we just have to decide how to apply them to this situation. 
<owen>	billh: After all, you have to represent to the screen reader that the text is preedit.
<billh>	true
<billh>	possibly via attribution
<billh>	ok, let's take that one offline.  Is the beep-when-moving-off behavior acceptable? (70986)?
<owen>	billh: Do other platforms do it? Other toolkits? I don't have any memory of that for multiline controls
<billh>	yeah
<billh>	lots of apps do it, I believe windoze does it, terminal does it.  It's part of the Windows Accessibility Guidelines.
<mclasen>	we probably want some global control about that, a setting... 
<owen>	(The system beep is clearly entirely a too intrusive visual alert for that, but we don't have a lot of control there...)
<mclasen>	does gtk currently beep at all, ever ?
<billh>	Calum's given it the thumbs up since 2002
<owen>	s/visual/audio/
<owen>	mclasen: Did we add it for notebook tabs and radio buttons?
<billh>	owen: there are two system visual bell types available.  The window-border one isn't very intrusive at all (possibly not intrusive enough)
<billh>	owen: right, agreed.
<billh>	err.. well no I am not sure I agree, but I understand.
<mclasen>	owen: I have never seen a notebook beep
<mclasen>	err, heard
<owen>	notebook seems to beep if you control-PageUp/Down off the end. All other occurrences of gdk_display_beep() in GTK+ seem to be for places where a g_warning() would be more appropirate
<billh>	owen: note 89336, mostly fixed by patch for 101309.  Patch is from you :-) but never applied (since 2002)
<billh>	owen: the notebook behavior seems good.  If it needed to be a system setting that'd be OK too, but I'd suggest one boolean for all the "beep when..." end-of-range navigation stuff
<owen>	billh: If it's right, it almost certianly needs to be on by default, at which point the system setting doesn't really have much attraction to me. (Personally, I just turn off the X bell entirely)
<billh>	yes, okay.  I don't mind that.
<billh>	owen: do you use the metacity setting for that? (turning off the audio bell)
<owen>	If I put my own patch in bugzilla rather than applying it, that's a fairly strong sign that I wasn't entirely happy with it
<carol>	i have my bell actually unplugged at the hardware level
<owen>	billh: Not using a visual bell. I think I may have just turned the volume to zero in keyboard-properties
<billh>	owen: not many people outside the gtk+ team would attempt to rewrite one of your patches ;-)
<billh>	owen: you don't need to turn on the visual one in order to turn off the audio bell (from metacity).
<mclasen>	but this is not exactly mustfix stuff, even if these are important bugs which would be nice to get fixed for 2.6 if a patch appears soon
<owen>	billh: Well, at least getting review from someone inside the GTK+ time.
<owen>	billh: Why is metacity involved?
<mclasen>	where "soon" means during the next two weeks...
<billh>	mclasen: this stuff has been getting pushed from milestone to milestone for years.
<owen>	s/GTK+ time/GTK+ team/
<mclasen>	billh: yes, unfortunately
<billh>	mclasen: and it's always the same answer.  It doesn't work, in the end.  The process is not working entirely well for a11y.
<mclasen>	what I would like to get marked with high priority for 2.6 at this point are regressions in existing features (e.g list store sorting not being stable)
<mclasen>	or brokenness in new features (e.g. icon view not working with sorted models)
<billh>	owen: because metacity is the best agent for delivering the visual effects.. and because philosophically it's not too far off base to put this in the WM functionality.  It seemed silly to put the 'no audio bell' feature in a different piece of code from the 'visual bell' feature.
<owen>	billh: Well, we know we have a problem with that, which is the whole idea of the introduction of "pool milestones"
<mclasen>	billh: I will go over your list and comment on them, maybe we *can* get some of them fixed for 2.6
<ssp>	mclasen: I thought you fixed the list store stable sort bug?
<mclasen>	ssp: no, looked quickly into it, but it was unclusive
<mclasen>	err, unconclusive
<owen>	billh: the idea is that bugs will get nominated to be moved out of the pool onto a specific milestones only when we have a specific plan about how to get it fixed, and then it becomes quasi-mustfix for that release
<billh>	mclasen: thanks a lot
<ssp>	mclasen: you tried taking the nodes from other end, and it didn't work?
<mclasen>	ssp: it crashed. maybe I made a mistake
<billh>	owen: okay - the plan stuff seems to get bogged down .  seems the common characteristic of the bugs is that they went into some sort of stasis regarding the "plan"
<owen>	billh: Huh? It was only introduced last week!!!
<owen>	:-)
<owen>	billh: Oh, you mean not the new pool milestones plan, but the plan for the particular bug
<owen>	billh: Most of the ones listed there never had a specific plan for resolution. 
<mclasen>	billh: part of the problem with these long winding bugs is that it can become unclear who has the ball, so to speak
<billh>	yes
<owen>	billh: a specific plan means   a) what needs ot be done b) who is going to do it c) when is it going to be done by
<mclasen>	billh: and once a bug is beyond 20 comments, it becomes hard to pick up the ball again...
<billh>	owen: the process of agreeing seems muddy
<ssp>	mclasen: I'll look at it then
<mclasen>	ssp: thanks
<owen>	billh: well, the idea is we'll do it at these meetings. Just that right now we're at the final-stages for 2.6.0 (two more weeks).
<billh>	owen: I know, it's a little late.
<ssp>	mclasen: Are there other gtksequence bugs? I am not really keeping up with gtk+ bugzilla anymore.
<mclasen>	ssp: I'm not aware of others
<billh>	owen: thanks a bunch anyhow.  Maybe we can get one or two into 2.6.0
<mclasen>	ok. Should we spend the remaining 5 minutes on bugs from the last millenium ?
<owen>	mclasen: I think they are mostly "need a volunteer" bugs
<mclasen>	owen: 3355 looks like a wontfix candidate to me
<mclasen>	because providing a buffer to the entry doesn't actually make the entry contents much more secure...
<owen>	mclasen: Well, some.
<owen>	mclasen: The keystrokes leak out, but usually individually.
<owen>	But "968 bugs found" is a fairly strong argument for WONTFIX if we aren't just going to fix it immediately.
<mclasen>	it also has companion bugs which ask for glib facilities to allocate unpageable memory...
<owen>	mclasen: That is less important, since that can be easily worked around outside of glib. Reimplementing GtkEntry is harder
<mclasen>	true
<mclasen>	1529 also looks like a wontfix candidate to me...you commented it as "I don't see this as all that fixable"...
<mclasen>	1165 and 1579 probably need someone to make a list of all widgets which still need fixing, and an outline of the necessary steps, so that volunteers can easier attack them
<owen>	1529 I think definitely should be WONTFIX'ed at the GTK+ level. If pkg-config wants to start doing it, it can start doing it.
<mclasen>	for 2250 we should probably verify that --disable-rebuilds works on a readonly srcdir, and mention it in the docs if it isn't
<owen>	sounds reasonable. But doesn't automake-1.7 require readonly srcdir for make distcheck to pass?
<mclasen>	dunno
<mclasen>	roboros, jpe: how does win32 currently look ? The filename encoding stuff is still affecting the file chooser ?
<owen>	mclasen: if 1.7 doesn't require readonly srcdir, then we likely will have to do a bunch of work to fix readonly srcdir when we upgrade to 1.9
<mclasen>	owen: I'll investigate
<roboros>	mclasen: tml added a little comment to bug 101792
<roboros>	err
<roboros>	159719
<roboros>	but it's probably not just the file chooser
<billh>	ugh ->  /opt/gnome-2.10/bin/epiphany: relocation error: /opt/gnome-2.10/bin/epiphany: undefined symbol: g_get_language_names
<billh>	b
<mclasen>	roboros: just wondering if I should wait for win32 fixes before doing the next 2.5.x release...since it will be the last before 2.6.0, it would probably be a good idea to have it working on win32 and get people test it on win32 as well
<billh>	sorry, mis-paste
<roboros>	mclasen: you have to ask tml how much work he thinks is left
<roboros>	but it seems pango module loading, gtk immodule loading etc are also affected, at least from a quick test
<mclasen>	ok, I have to go now. I'll try to contact tml. My plan is to do 2.4.x and 2.5.x releases on Thursday. Bye
<carol>	this thursday?
<roboros>	if the binaries are in a dir with a funky name
<carol>	this week thursday


Meeting ended November 29, 17:15 EST (22:15 UTC)
