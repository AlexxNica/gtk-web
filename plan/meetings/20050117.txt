Meeting on irc.gnome.org:#gtk-devel
Meeting started January 10 2005 16:03 EST (21:03 UTC)

In attendence: 

Owen Taylor (owen), 
Manish Singh (yosh),
Federico Mena Quintero (federico),
Jonathan Blandford (jrb),
Shawn T. Amundson (snorfle),
Matthias Clasen (mclasen), 
Anders Carlsson (andersca),
Billy Biggs (vektor),
Robert Ögren (roboros),
Tor Lillqvist (tml),
John Ehresman (jpe),
Maciej Katafiasz (mathrick)


<mclasen>	so, I did not post an agenda, since I don't have any items
<mclasen>	what do we need to discuss today ? (apart from celebrating the first full-time gtk/win32 developer)
<mathrick>	mclasen: who is that? :)
*	mathrick is behind apparently
<snorfle>	new gtk server machine
<mclasen>	matrick: tml got hired by Novell
<mathrick>	rock
<snorfle>	awesome
<mathrick>	mclasen: I'd like to discuss dangling items in 2.8 schedule, that is introspection (yeah, I suck)
<mathrick>	prototypes are meant to be ready by april at the very least, right?
<mathrick>	hey tml, congrats :)
<mclasen>	mathrick: yes. my current plan is to finish my current icon view features, and then start working on introspection
<mathrick>	mclasen: ok, when do you plan to finish it?
<mclasen>	my plan doesn't go that far...
<mathrick>	I wanted to start hacking on ed__'s code this week, but that didn't happen :\
<mathrick>	so I'll need at least approximate schedule to know when I can no longer fail :>
<mclasen>	mathrick: I think finishing off a first implementation the cell renderer stuff can be done this week
<mathrick>	mclasen: hmm, so that means you'd want to have it by next weekend, more or less?
Jan 17 16:09:07 *	mathrick calculates
<mclasen>	mathrick: I don't expect to find a working prototype by that time...I was envisioning to start on an implementation from scratch, picking the good pieces from ed__s prototype
<mathrick>	mclasen: yeah, I know, what I wanted is to go through ed__'s work and pre-select worthy stuff
<mclasen>	that would be appreciated
<mathrick>	mclasen: also, would it be possible to setup arch repo somewhere?
<federico>	are most of the language bindings people in the loop w.r.t. introspection, or will we have to shove it down their throats when it's ready? :)
<mathrick>	federico: mostly the latter :)
<mathrick>	with exception of fuss on gtk-devel list
<mclasen>	federico: at least perl, python and c# seemed to be present in the last threat 
<mclasen>	err, thread
<federico>	ah, good
<mclasen>	another agenda item brought up by jrb is that we should sort out a11y activation for 2.8
<federico>	what will the status be by guadec?  would it be productive to schedule a hack-a-thon there to make all the language bindings work through introspection?
<mathrick>	guadec is when?
<mclasen>	end of may
<mclasen>	federico: I would hope for it to be basically complete by that time
<mathrick>	end of may should be first cut at final version I think
<andersca>	mclasen: a11y activation?
<mclasen>	ok, so we should probably go over the items in order...
<jrb_meet> acutally, one thing that we need for 2.8 is getting the a11y initialization workgin...
<mathrick>	federico: it'd be nice to have brainstorming day before getting to final version, to grind prototype through various language people and get their opinion
<andersca>	mclasen: ideally the a11y init stuff would be done in a gtkmodule
<mclasen>	andersca: I think you had a plan for that, based on the module-setting we have now ?
<andersca>	mclasen: yeah
<owen>	I'm not sure if there is a GTK+ component to that or not ... the Gtk/Modules stuff we added for 2.6 might be sufficient
<andersca>	owen: yeah
<mclasen>	owen: so it is probably more of a Gnome 2.12 item than a gtk 2.8 item...
<mclasen>	andersca: where is the a11y init code currently living ? in libgnome ?
<andersca>	mclasen: libgnomeui I think
<andersca>	or both
<andersca>	it's very broken
<mclasen>	andersca: and the fix would be to move it into a gtk module, and put that module on the list of modules to load at startup, provided a11y is enabled ?
<andersca>	mclasen: yeah
<andersca>	mclasen: I'd also like a module for other things, like setting up a segv handler, hooking up the about dialog url callbacks, etc
<mclasen>	we can probably leave all that to the libgnomeui maintainer :-)
<andersca>	mclasen: you mean jrb?
<andersca>	:)
<mclasen>	ok, trying again to get back to the first agenda item. snorfle, what is the status of the gtk server move ?
<snorfle>	I gave up on donations, and purchased enough components for this myself
<snorfle>	the machine is a athlon xp 2000
<snorfle>	it has 4 120gb drives in a raid 5 configuration
<snorfle>	and is named cube.gtk.org
<snorfle>	as I've just gotton it in place, I'm just starting to do system configuration
<snorfle>	user accounts will be made this week, after the usage policy "paragraph" has been written
<snorfle>	dns services will be the first to be migrated, then www.gtk.org, then ftp.gtk.org/ftp.gimp.org
<snorfle>	eventually mail services will be moved
<snorfle>	that's basically the summary
<mclasen>	snorfle: you had some plans to restructure the website, will that happen after the move to the new machine ?
<snorfle>	yes, after the move
<snorfle>	so I'll take what we have now, move it, and then we can discuss the changes in greater detail
<snorfle>	I'd like to get a graphic artist to help with the site redesign, so it doesn't look like I did it
<snorfle>	:-)
<mclasen>	snorfle: sounds good to me
<mclasen>	err, the comment was regarding your second-to-last line...
<mclasen>	not regarding your artistic abilities...
<mclasen>	vektor: did you ever get around to write up something about color changing in themes ?
<vektor>	um
<vektor>	I don't think so, not after the IRC meeting we had I had not taken it the next step.
<vektor>	It was unclear what that step was, mailing list I think.
*	federico kicks the internet
<snorfle>	does the gnome machine(s) have enough room we could rsync/rsnapshot to it for backup purposes?
<mclasen>	vektor: i think the idea was to write up the conclusions of that irc session, then find someone interested in implementing it
<vektor>	OK, I can write it up.
<mclasen>	vektor: actually, I think at some point jrb was interested in implementing it, but that window of opportunity may have closed already
<mathrick>	federico: hmm, did you get my last msg, about brainstorming day?
<mclasen>	snorfle: I don't know about that. owen probably does...
<owen>	snorfle: Probably. 
<owen>	[otaylor@container otaylor]$ df
<owen>	/dev/cciss/c0d0p9    250203032  22761332 214527052  10% /mnt/u0
<owen>	/dev/cciss/c0d0p10   250203032     32828 237255556   1% /mnt/u1
<snorfle>	owen: ok, I'll discuss it more with you offlne
<owen>	snorfle: We'd need to add it to the backup exclude list so it doesn't all get rsync'ed and tape backuped
<federico>	mathrick: no; I got disconnected
<mclasen>	federico: did you get a chance to look more at the recent file chooser bugs ? ie the scroll-to-point issue, and mitch's problem of set_name() being overwritten by an earlier set_uri()
<federico>	mclasen: I'm on mitch's; I think those two are related
<mclasen>	ok. 
<mathrick> federico: it'd be nice to have brainstorming day before getting to final version, to grind prototype through various language people and get their opinion
<mathrick>	federico: hackfest to get bindings migrated would be great too, of course
<federico>	mathrick: yeah, probably... I haven't followed the thread on gtk-devel-list, but I guess there is a set list of features already, right?
<mathrick>	hmm, more like a wishlist
<mathrick>	not exactly feature set
<mclasen>	ok, have to drop out. I'll post the logs tomorrow
<tml>	federico &others: what should be done about the outstandaing win32 issues in gtkfille*? i guess adding those two APIs (path_compare and get_desktop) is not a good idea for stable at this point?
<roboros>	tml: congratulations to the new job!
<tml>	tnx robert
<federico>	tml: I'd go for get_standard_paths() instead of get_desktop
<federico>	tml: we can probably add them in stable, with checks for unimplemented versions
<tml>	OK. I'll whip out an implementation for win32 & unix and put in bugzilla
<owen>	tml: I really like the \0 separated double-path version beter than the paths_compare() ... but I'm not entirely convinced that casefolded comparison is needed
<owen>	(except in the control-l ui where it is needed cross-platform and should be fine with g_utf8_casefold())
<tml>	owen: OK, I'll have a look at that , too
<tml>	btw, i asked about the casefolding behaviour of NTFS from *the* Microsoft i18n guy, Michael Kaplan, see http://blogs.msdn.com/michkap/archive/2005/01/16/353873.aspx . Can recommend his blog, btw.
<federico>	tml: dude, it's great to have you at novell
<tml>	thanks, federico. hope i'll be useful ;-)
<roboros>	tml: pet project (experimental): http://www.cs.umu.se/~c00ron/libtool-cache/
<tml>	roboros: nice!
<owen>	roboros: Though maybe just writing a little C program compatible with libtool on the command line would be less complex?
<owen>	("just")
<owen>	By less complex, I mean ... less fragile/faster not simpler to do
<tml>	if somebody is interested to hack more on such, i have something i once tried. don't remember what problems made me stop hacking on it
<roboros>	owen: sure, once it works it would be better
<roboros>	this was just a quick hack
<tml>	c00ron? does that mean anything?
<roboros>	C = the name of the education (master in computing science), 00=year I started, ron = Robert OgreN :)
<tml>	oh. it looked like haxorspeak ;-)
<roboros>	owen: it was more of a band-aid solution that works surprisingly well on my machine, YMMV
<roboros>	tml: yeah we're all haxx0rs :)
<tml>	owen: how slow is libtool on MSYS on modern hardware, btw? 
<owen>	tml: I didn't notice it being too bad, but then again, I usually compile on a much slower macine, so perhaps it should have been flying where it wasn't
<owen>	tml: autoconf was more noticeably slooow
<tml>	roboros: i grew up on the other side of the gulf from umeå, btw (jakobstad). never been to umeå, though, only skellefteå.
<tml>	owen: autoconf, hmm, its slowness hasn't bothered me. could there be some particular interaction between it and MSYS that one doesn't notice in Cygwin?
<owen>	tml: have you worked much with auto* on Unix?
<owen>	tml: It may not be absolutely slow, but it seems a good 3* slowr than on Unix to me
<roboros>	tml: ah, I must confess I've never been to finland at all :(
<jpe>	I think the auto* tools are quite a bit slower on win32
<tml>	owen: i have built "the usual stuff" on solaris, and occasionally  on linux
<tml>	owen: but autoconf is not run as often as libtool anyway
<tml>	roboros: are you natively from the umeå area or from some other part of sweden?
<roboros>	I have a linux installation on the same machine and compilation is lightning fast in linux and dog slow in windows, though the cache helps a bit. though the real solution for me might be to just start using linux more and windows less :)
<yosh>	libtool is such a poor design
<roboros>	tml: from örnsköldsvik, 110km south of umeå
<jpe>	I did try building with msys / gcc, but it took considerably longer than w/ VC++
<tml>	is there much difference in the speed of gcc itself?
<yosh>	it slows things down on linux too (tho not as dramitically as on windows)
<yosh>	jpe: what gcc version? gcc 3.4 actually got faster
<yosh>	than prior versions
<roboros>	gcc is pretty fast for me even on windows, it's the mad forking in the autotools and libtools that makes things slow on windows I think
<jpe>	gcc 3.4.2, but I think much of the overhead in the sh shell, libtool, etc.
<tml>	yeah. i once looked into building busybox on Cygwin to avoid the forking, but didn't get far, some mysterious problems i didn't feel like debugging
<jpe>	Trying to implement forking on win32 is probably not the way to go
<tml>	i wouldn't be surprised if there was some "real" fork() -like functionality hidden someway inside the windows kernel, for the posix subsystem's use, but even if so it would of couse be undocumented and not accessible from normal code
<owen>	I'm really suprised that with all the effort that has gone into cygwin over the years, nobody has created a bash with builtin sed/grep/etc. that run in threads
<tml>	owen: perhaps you should poke redhat's cygwin guys...
<owen>	tml: We don't have cygwin guys any more
<owen>	(Well, one of the desktop team people is big on cygwin, but doesn't work on it on our time)
<tml>	oh. didn't know that...  but you still sell it as a product? http://www.redhat.com/software/cygwin/
<owen>	We may still have some people to handle support issues on that; we aren't doing a lot of active development certainly.
<owen>	OK, Corinna Vinschen  seems to be still posting on the devel lists, so she's probably the main person here on the project
<tml>	time for bed, bye


Meeting ended January 17, 17:45 EST (22:45 UTC)
